{"version":3,"sources":["PlateController.js"],"names":["window","Global","plateController","lineController","effectArea","blockArea","cc","Class","extends","Component","properties","blockPrefab","Prefab","dotPrefab","debug","ballPrefabs","default","type","ballArea","Node","lineArea","emptyPostions","randomRange","min","max","Math","random","randomRangeInt","arguments","length","floor","drawBalls","blockSize","x_0","sqrt","i","j","block","instantiate","children","color","Color","getComponent","Label","string","active","width","height","row","column","addChild","setPosition","v2","getRoundBalls","ball","balls","element","name","abs","push","deleteBalls","_balls","forEach","v","removeFromParent","countBallsFallingDistance","fallingBall","Set","oriBall","parent","distance","add","generateNewBalls","key","hasOwnProperty","count","Number","updateBall","that","fallDown","destroy","onLoad","zIndex","isInPlayAni","manager","director","getCollisionManager","enabled","start"],"mappings":"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","file":"PlateController.js","sourceRoot":"../../../../../assets/Script/Controller","sourcesContent":["window.Global = {\n    plateController: null,\n    lineController: null,\n    effectArea:null,\n    blockArea:null,\n    // map:null\n};\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        blockPrefab: cc.Prefab,\n        dotPrefab: cc.Prefab,\n        debug: true,\n        ballPrefabs: {\n            default: [],\n            type: [cc.Prefab]\n        },\n        ballArea: cc.Node,\n        lineArea: cc.Node,\n        effectArea: cc.Node,\n        blockArea:cc.Node,\n        emptyPostions: [],\n        // map:[],       \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n    randomRange(min, max) {\n        return Math.random() * (max - min) + min;\n    },\n    randomRangeInt(min, max) {\n        if (arguments.length == 2) {\n            return Math.floor(this.randomRange(min, max));\n        } else if (arguments.length == 1) {\n            return arguments[0][Math.floor(this.randomRange(0, arguments[0].length))];\n        }\n    },\n    //根据this.map绘制珠盘\n    drawBalls() {\n        this.blockSize = 94;\n        let x_0 = 2 * this.blockSize / Math.sqrt(3);\n        for (let i = 0; i < 6; i++) {\n            // let row = [];\n            for (let j = 0; j < 7; j++) {\n                if (i == 5 && j % 2 != 0) {\n                    //删除顶端3个珠子\n                } else {\n                    let block = cc.instantiate(this.ballPrefabs[this.randomRangeInt(0, 5)]);\n                    if (this.debug) {\n                        block.children[0].color = new cc.Color(0, 0, 0);\n                        block.children[0].getComponent(cc.Label).string = i + ' ' + j;\n                    } else {\n                        block.children[0].active = false;\n                    }\n                    block.width = 150;\n                    block.height = 150;\n                    block.row = i;\n                    block.column = j;\n                    this.ballArea.addChild(block);\n                    if (j % 2 == 0) {\n                        block.setPosition(cc.v2(j * Math.sqrt(3) * this.blockSize + x_0, this.blockSize + 2 * this.blockSize * i));\n                    } else {\n                        block.setPosition(cc.v2(j * Math.sqrt(3) * this.blockSize + x_0, 2 * this.blockSize + 2 * this.blockSize * i));\n                    }\n                }\n            }\n        }\n    },\n    getRoundBalls(ball){\n        let balls = [];\n        for (let i = 0; i < this.ballArea.children.length; i++) {\n            const element = this.ballArea.children[i];\n            if(element.name!='blockArea'){\n                if(element.column==ball.column){\n                    if(Math.abs(ball.row-element.row)==1){\n                        balls.push(element);\n                        continue;\n                    }\n                }else{\n                    if(ball.column%2!=0){\n                        if(Math.abs(ball.column-element.column)==1){    \n                            if(ball.row==element.row || ball.row==element.row-1){\n                                balls.push(element);\n                                continue;    \n                            }\n                        }\n                    }else{\n                        if(Math.abs(ball.column-element.column)==1){\n                            if(ball.row==element.row || ball.row==element.row+1){\n                                balls.push(element);\n                                continue;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return balls;\n    },\n    deleteBalls(_balls){//随机消除\n        this.emptyPostions=_balls;\n        this.emptyPostions.forEach(function(v){\n            v.removeFromParent(false);\n        })\n    },\n    countBallsFallingDistance() {//计算所有珠子下降距离\n        this.fallingBall = new Set();\n        for (let i = 0; i < this.ballArea.children.length; i++) {\n            if (this.ballArea.children[i].name != \"blockArea\") {\n                let oriBall = this.ballArea.children[i];\n                if (oriBall.parent != null) {\n                    let distance = 0;\n                    for (let j = 0; j < this.emptyPostions.length; j++) {\n                        let ball = this.emptyPostions[j];\n                        if (oriBall.column == ball.column) {\n                            if (oriBall.row > ball.row) {\n                                distance += 1;\n                                continue;\n                            }\n                        }\n                    }\n                    if (distance > 0) {\n                        oriBall.distance = distance;\n                        this.fallingBall.add(oriBall);\n                    }\n                }\n            }\n        }\n    },\n    generateNewBalls() {\n        let balls = {\n            '0': 0,\n            '1': 0,\n            '2': 0,\n            '3': 0,\n            '4': 0,\n            '5': 0,\n            '6': 0\n        };\n        for (let i = 0; i < this.emptyPostions.length; i++) {\n            let ball = this.emptyPostions[i];\n            balls[ball.column] += 1;\n        }\n        for (const key in balls) {\n            if (balls.hasOwnProperty(key)) {\n                const count = balls[key];\n                if (count > 0) {\n                    for (let i = 0; i < count; i++) {\n                        let ball = cc.instantiate(this.ballPrefabs[this.randomRangeInt(0, 5)]);\n                        ball.children[0].active = false;\n                        ball.width = 150;\n                        ball.height = 150;\n                        ball.column = Number(key);\n                        if(ball.column%2!=0){\n                            ball.row = 5 + i\n                        }else{\n                            ball.row = 6 + i\n                        }\n                        this.ballArea.addChild(ball);\n                        if (ball.column % 2 == 0) {\n                            ball.setPosition(cc.v2(ball.column * Math.sqrt(3) * this.blockSize + 2 * this.blockSize / Math.sqrt(3), this.blockSize + 2 * this.blockSize * ball.row));\n                        } else {\n                            ball.setPosition(cc.v2(ball.column * Math.sqrt(3) * this.blockSize + 2 * this.blockSize / Math.sqrt(3), 2 * this.blockSize + 2 * this.blockSize * ball.row));\n                        }\n                    }\n                }\n            }\n        }\n    },\n    updateBall() {\n        let that = this;\n        this.fallingBall.forEach(function (ball, i) {\n            ball.getComponent(\"Ball\").fallDown(ball.distance);\n            ball.distance = 0;\n        })\n        this.fallingBall = []; //完成下坠队列\n        this.emptyPostions.forEach(function (v, i) {\n            v.destroy();\n        })\n        this.emptyPostions = []; //回收删除的珠子\n    },\n    onLoad() {\n        this.drawBalls();\n        this.blockArea.zIndex = 1;\n        this.isInPlayAni = false;\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        Global.plateController = this;\n        Global.lineController = this.lineArea.getComponent('LineController');\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});"]}