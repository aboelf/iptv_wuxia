{"version":3,"sources":["GameController.js"],"names":["CryptoJS","require","key","console","log","enc","Hex","parse","iv","src","AES","encrypt","mode","CBC","padding","pad","Pkcs7","enced","ciphertext","toString","dec","decrypt","format","Utf8","stringify","cc","Class","extends","Component","properties","worldSceneBGM","type","AudioClip","default","plateBg","Node","blood","onLoad","bloodController","getComponent","plateController","totalBlood","start"],"mappings":";;;;;;AASA;;AAIA,IAAIA,WAAWC,QAAQ,WAAR,CAAf,EAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,IAAIC,MAAM,kEAAV;AACAC,QAAQC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACAA,MAAMF,SAASK,GAAT,CAAaC,GAAb,CAAiBC,KAAjB,CAAuBL,GAAvB,CAAN;AACA,IAAIM,KAAKR,SAASK,GAAT,CAAaC,GAAb,CAAiBC,KAAjB,CAAuB,kCAAvB,CAAT;AACA,IAAIE,MAAM,WAAV;AACAN,QAAQC,GAAR,CAAY,OAAZ,EAAqBK,GAArB;AACA,IAAIJ,MAAML,SAASU,GAAT,CAAaC,OAAb,CAAqBF,GAArB,EAA0BP,GAA1B,EAA+B;AACrCM,QAAIA,EADiC;AAErCI,UAAMZ,SAASY,IAAT,CAAcC,GAFiB;AAGrCC,aAASd,SAASe,GAAT,CAAaC;AAHe,CAA/B,CAAV;;AAMA;AACA,IAAIC,QAAQZ,IAAIa,UAAJ,CAAeC,QAAf,EAAZ;AACAhB,QAAQC,GAAR,CAAY,KAAZ,EAAmBa,KAAnB;;AAEA,IAAIG,MAAMpB,SAASU,GAAT,CAAaW,OAAb,CAAqBrB,SAASsB,MAAT,CAAgBhB,GAAhB,CAAoBC,KAApB,CAA0BU,KAA1B,CAArB,EAAuDf,GAAvD,EAA4D;AAClEM,QAAIA,EAD8D;AAElEI,UAAMZ,SAASY,IAAT,CAAcC,GAF8C;AAGlEC,aAASd,SAASe,GAAT,CAAaC;AAH4C,CAA5D,CAAV;AAKAb,QAAQC,GAAR,CAAY,KAAZ,EAAmBJ,SAASK,GAAT,CAAakB,IAAb,CAAkBC,SAAlB,CAA4BJ,GAA5B,CAAnB;;AAEAK,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,uBAAe;AACXC,kBAAMN,GAAGO,SADE;AAEXC,qBAAS;AAFE,SADP;AAKRC,iBAAST,GAAGU,IALJ;AAMRC,eAAMX,GAAGU;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBQ,KAHP;;AA2BL;;AAEAE,UA7BK,oBA6BI;AACL;AACA;AACA,aAAKC,eAAL,GAAuB,KAAKF,KAAL,CAAWG,YAAX,CAAwB,iBAAxB,CAAvB;AACA,aAAKC,eAAL,GAAuB,KAAKN,OAAL,CAAaK,YAAb,CAA0B,iBAA1B,CAAvB;AACA,aAAKD,eAAL,CAAqBG,UAArB,GAAkC,KAAlC;AACH,KAnCI;AAqCLC,SArCK,mBAqCG,CAEP;AAvCI;;AAyCL;AAzCJ","file":"GameController.js","sourceRoot":"../../../../../assets/Script/Controller","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\nimport {\n    GRID_WIDTH,\n    GRID_HEIGHT\n} from \"../Config/Config\";\nvar CryptoJS = require(\"crypto-js\");\nvar key = '3132333435363738393041424344454631323334353637383930414243444566';\nconsole.log('密钥：', key);\nkey = CryptoJS.enc.Hex.parse(key)\nvar iv = CryptoJS.enc.Hex.parse(\"30313233343536373839414243444546\")\nvar src = \"werty7890\";\nconsole.log('原字符串：', src);\nvar enc = CryptoJS.AES.encrypt(src, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n})\n\n//console.log('加密:',enc.toString());\nvar enced = enc.ciphertext.toString()\nconsole.log(\"加密：\", enced);\n\nvar dec = CryptoJS.AES.decrypt(CryptoJS.format.Hex.parse(enced), key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n})\nconsole.log('解密:', CryptoJS.enc.Utf8.stringify(dec));\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        worldSceneBGM: {\n            type: cc.AudioClip,\n            default: null,\n        },\n        plateBg: cc.Node,\n        blood:cc.Node,\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        // this.gameSceneBGMAudioId = cc.audioEngine.play(this.worldSceneBGM, true, 1);\n        // cc.log(this.blockPrefab.data.width,this.blockPrefab.data.height)\n        this.bloodController = this.blood.getComponent(\"BloodController\");\n        this.plateController = this.plateBg.getComponent(\"PlateController\");\n        this.bloodController.totalBlood = 10000;\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});"]}